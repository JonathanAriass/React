{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\byjon\\\\Desktop\\\\React\\\\FoodApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\byjon\\\\Desktop\\\\React\\\\FoodApp\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\";\n\nimport React, { useRef, useState } from \"react\";\nimport Input from \"../../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\n\nvar MealItemForm = function MealItemForm(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      amountIsValid = _useState2[0],\n      setAmountIsValid = _useState2[1];\n\n  var amountInputRef = useRef();\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    var enteredAmount = amountInputRef.current.value;\n    var enteredAmountNumber = +enteredAmount; // Need to parse the string to number\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    ref: amountInputRef,\n    label: \"Amount\",\n    input: {\n      id: \"amount_\" + props.id,\n      type: \"number\",\n      min: \"1\",\n      max: \"5\",\n      step: \"1\",\n      defaultValue: \"1\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"+ Add\"), !amountIsValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 26\n    }\n  }, \"Please enter a valid amount (1-5).\"));\n};\n\nexport default MealItemForm;","map":{"version":3,"names":["React","useRef","useState","Input","classes","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","form","id","type","min","max","step","defaultValue"],"sources":["C:/Users/byjon/Desktop/React/FoodApp/src/components/Meals/MealItem/MealItemForm.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Input from \"../../UI/Input\";\r\n\r\nimport classes from \"./MealItemForm.module.css\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n\r\n  const amountInputRef = useRef();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredAmount = amountInputRef.current.value;\r\n    const enteredAmountNumber = +enteredAmount; // Need to parse the string to number\r\n\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n\r\n    props.onAddToCart(enteredAmountNumber);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount_\" + props.id,\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button>+ Add</button>\r\n      {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;EAAA,gBACYJ,QAAQ,CAAC,IAAD,CADpB;EAAA;EAAA,IACvBK,aADuB;EAAA,IACRC,gBADQ;;EAG9B,IAAMC,cAAc,GAAGR,MAAM,EAA7B;;EAEA,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;IAC/BA,KAAK,CAACC,cAAN;IAEA,IAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;IACA,IAAMC,mBAAmB,GAAG,CAACH,aAA7B,CAJ+B,CAIa;;IAE5C,IACEA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAF,mBAAmB,GAAG,CADtB,IAEAA,mBAAmB,GAAG,CAHxB,EAIE;MACAR,gBAAgB,CAAC,KAAD,CAAhB;MACA;IACD;;IAEDF,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;EACD,CAhBD;;EAkBA,oBACE;IAAM,SAAS,EAAEZ,OAAO,CAACgB,IAAzB;IAA+B,QAAQ,EAAEV,aAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IACE,GAAG,EAAED,cADP;IAEE,KAAK,EAAC,QAFR;IAGE,KAAK,EAAE;MACLY,EAAE,EAAE,YAAYf,KAAK,CAACe,EADjB;MAELC,IAAI,EAAE,QAFD;MAGLC,GAAG,EAAE,GAHA;MAILC,GAAG,EAAE,GAJA;MAKLC,IAAI,EAAE,GALD;MAMLC,YAAY,EAAE;IANT,CAHT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAaE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAbF,EAcG,CAACnB,aAAD,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wCAdrB,CADF;AAkBD,CAzCD;;AA2CA,eAAeF,YAAf"},"metadata":{},"sourceType":"module"}