{"version":3,"file":"static/js/776.71a15f34.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__9cxIN\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__C3cQf\",\"loading\":\"NewCommentForm_loading__aSq20\",\"control\":\"NewCommentForm_control__iR6jS\",\"actions\":\"NewCommentForm_actions__NC323\"};","import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__+vwzS\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__UVWAR\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedComentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm quoteId={quoteId} onAddedComment={addedComentHandler} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetails = () => {\n  const params = useParams();\n  const match = useRouteMatch();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focus\">{error}</p>;\n  }\n\n  if (!loadedQuote) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`/quotes/${params.quoteId}/comments`}>\n        <Comments />\n      </Route>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteDetails;\n"],"names":["props","className","classes","text","author","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","onSubmit","LoadingSpinner","htmlFor","id","rows","ref","comments","map","comment","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedComentHandler","useCallback","length","onClick","params","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"sourceRoot":""}