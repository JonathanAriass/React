{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\byjon\\\\Desktop\\\\React\\\\Forms\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  // useInput for each input\n  const {\n    value: enteredName,\n    isValid: validName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    isValid: validLastName,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: validEmail,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\")); // Check for global validity of the form\n\n  let formIsValid = false;\n\n  if (validName && validLastName && validEmail) {\n    formIsValid = true;\n  } // Check validity for every input (css)\n\n\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\"; // Form submission handler\n\n  const formSubmissionHandler = event => {\n    event.preventDefault(); //Check validity and log in case of error\n\n    if (!validName) {\n      console.log(\"Name is invalid\");\n      return;\n    }\n\n    if (!validLastName) {\n      console.log(\"Last name is invalid\");\n      return;\n    }\n\n    if (!validEmail) {\n      console.log(\"Email is invalid\");\n      return;\n    } // Reset input fields\n\n\n    resetNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name input not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name input not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"FIdQiu1o/hiH0M2W6jD66/aBtY4=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","BasicForm","props","value","enteredName","isValid","validName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredLastName","validLastName","lastNameInputHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastNameInput","enteredEmail","validEmail","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","nameInputClasses","lastNameInputClasses","emailInputClasses","formSubmissionHandler","event","preventDefault","console","log"],"sources":["C:/Users/byjon/Desktop/React/Forms/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  // useInput for each input\n  const {\n    value: enteredName,\n    isValid: validName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredLastName,\n    isValid: validLastName,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: validEmail,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  // Check for global validity of the form\n  let formIsValid = false;\n\n  if (validName && validLastName && validEmail) {\n    formIsValid = true;\n  }\n\n  // Check validity for every input (css)\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameInputClasses = lastNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  // Form submission handler\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    //Check validity and log in case of error\n    if (!validName) {\n      console.log(\"Name is invalid\");\n      return;\n    }\n\n    if (!validLastName) {\n      console.log(\"Last name is invalid\");\n      return;\n    }\n\n    if (!validEmail) {\n      console.log(\"Email is invalid\");\n      return;\n    }\n\n    // Reset input fields\n    resetNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  return (\n    <form>\n      <div className=\"control-group\">\n        <div className={nameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input type=\"text\" id=\"name\" />\n          {nameInputHasError && (\n            <p className=\"error-text\">Name input not valid</p>\n          )}\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\" />\n          {lastNameInputHasError && (\n            <p className=\"error-text\">Last name input not valid</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\" />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}