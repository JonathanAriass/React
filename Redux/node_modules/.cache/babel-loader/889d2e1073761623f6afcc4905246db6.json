{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\byjon\\\\Desktop\\\\React\\\\Redux\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch(); // Retrieve the current count from the store and automatically susbcripte to the store\n\n  const counter = useSelector(state => state.counter);\n  const showCounter = useSelector(state => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch({\n      type: \"INCREMENT\"\n    });\n  }; // The store normally will need a payload to be more flexible\n\n\n  const increaseHandler = event => {\n    dispatch({\n      type: \"INCREASE\",\n      payload: 5\n    });\n  };\n\n  const decrementHandler = () => {\n    dispatch({\n      type: \"DECREMENT\"\n    });\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: \"TOGGLE_COUNTER\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), showCounter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase By 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"K8sD1S6QxuN5wk6p12Sa6g8roDA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; //Class-based component to connect to the store\n// Needed imports to connect to the store in a class-based component\n// import { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() {}\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// Needed functions to connect to the store where we take the state of the store and pass it as props to the component\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n// };\n// Same as above but with dispatch\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({ type: \"INCREMENT\" }),\n//     decrement: () => dispatch({ type: \"DECREMENT\" }),\n//     toggleCounter: () => dispatch({ type: \"TOGGLE_COUNTER\" }),\n//   };\n// };\n// The new for of connecting to the store is via the connect function from react-redux\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","Counter","dispatch","counter","state","showCounter","incrementHandler","type","increaseHandler","event","payload","decrementHandler","toggleCounterHandler","value"],"sources":["C:/Users/byjon/Desktop/React/Redux/src/components/Counter.js"],"sourcesContent":["import classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  // Retrieve the current count from the store and automatically susbcripte to the store\n  const counter = useSelector((state) => state.counter);\n  const showCounter = useSelector((state) => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch({ type: \"INCREMENT\" });\n  };\n\n  // The store normally will need a payload to be more flexible\n  const increaseHandler = (event) => {\n    dispatch({ type: \"INCREASE\", payload: 5 });\n  };\n\n  const decrementHandler = () => {\n    dispatch({ type: \"DECREMENT\" });\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch({ type: \"TOGGLE_COUNTER\" });\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {showCounter && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase By 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n//Class-based component to connect to the store\n\n// Needed imports to connect to the store in a class-based component\n\n// import { Component } from \"react\";\n// import { connect } from \"react-redux\";\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n\n//   toggleCounterHandler() {}\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// Needed functions to connect to the store where we take the state of the store and pass it as props to the component\n\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n// };\n\n// Same as above but with dispatch\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({ type: \"INCREMENT\" }),\n//     decrement: () => dispatch({ type: \"DECREMENT\" }),\n//     toggleCounter: () => dispatch({ type: \"TOGGLE_COUNTER\" }),\n//   };\n// };\n\n// The new for of connecting to the store is via the connect function from react-redux\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B,CADoB,CAEpB;;EACA,MAAMG,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;EACA,MAAME,WAAW,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA/B;;EAEA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BJ,QAAQ,CAAC;MAAEK,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFD,CANoB,CAUpB;;;EACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;IACjCP,QAAQ,CAAC;MAAEK,IAAI,EAAE,UAAR;MAAoBG,OAAO,EAAE;IAA7B,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BT,QAAQ,CAAC;MAAEK,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMK,oBAAoB,GAAG,MAAM;IACjCV,QAAQ,CAAC;MAAEK,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFD;;EAIA,oBACE;IAAM,SAAS,EAAET,OAAO,CAACK,OAAzB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGE,WAAW,iBAAI;MAAK,SAAS,EAAEP,OAAO,CAACe,KAAxB;MAAA,UAAgCV;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFlB,eAGE;MAAA,wBACE;QAAQ,OAAO,EAAEG,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEE,eAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEG,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAQE;MAAQ,OAAO,EAAEC,oBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAnCD;;GAAMX,O;UACaD,W,EAEDD,W,EACIA,W;;;KAJhBE,O;AAqCN,eAAeA,OAAf,C,CAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}