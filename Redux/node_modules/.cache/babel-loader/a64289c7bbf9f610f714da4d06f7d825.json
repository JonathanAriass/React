{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\"; // AUTH SLICE\n\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlicer = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login: state => {\n      state.isAuthenticated = true;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n    }\n  }\n}); // The reducer prop could handle an object with multiple reducers\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlicer.reducer,\n    auth: authSlicer.reducer\n  }\n});\nexport const counterActions = counterSlicer.actions;\nexport const authActions = authSlicer.actions;\nexport default store; ////////////////////////////////////////////////////////////////////////////////\n// OLD WAY OF DOING THE REDUCERS FOT THE STORE ////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\n/**\r\nimport { createStore } from \"redux\";\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"INCREMENT\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"INCREASE\") {\r\n    return {\r\n      counter: state.counter + action.payload,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"DECREMENT\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"TOGGLE_COUNTER\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);**/","map":{"version":3,"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlicer","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlicer","auth","counterActions","actions","authActions"],"sources":["C:/Users/byjon/Desktop/React/Redux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\n// AUTH SLICE\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\nconst authSlicer = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login: (state) => {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\n// The reducer prop could handle an object with multiple reducers\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlicer.reducer, auth: authSlicer.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlicer.actions;\r\nexport const authActions = authSlicer.actions;\r\n\r\nexport default store;\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// OLD WAY OF DOING THE REDUCERS FOT THE STORE ////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n/**\r\nimport { createStore } from \"redux\";\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"INCREMENT\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"INCREASE\") {\r\n    return {\r\n      counter: state.counter + action.payload,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"DECREMENT\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"TOGGLE_COUNTER\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);**/\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAnB,CAAzB;AAEA,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,MADuB;EAE7BC,YAAY,EAAEJ,gBAFe;EAG7BK,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAD,IAAW;MAChBA,KAAK,CAACN,eAAN,GAAwB,IAAxB;IACD,CAHO;IAIRO,MAAM,EAAGD,KAAD,IAAW;MACjBA,KAAK,CAACN,eAAN,GAAwB,KAAxB;IACD;EANO;AAHmB,CAAD,CAA9B,C,CAaA;;AACA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EAC3BW,OAAO,EAAE;IAAEC,OAAO,EAAEC,aAAa,CAACF,OAAzB;IAAkCG,IAAI,EAAEX,UAAU,CAACQ;EAAnD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMI,cAAc,GAAGF,aAAa,CAACG,OAArC;AACP,OAAO,MAAMC,WAAW,GAAGd,UAAU,CAACa,OAA/B;AAEP,eAAeN,KAAf,C,CAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}