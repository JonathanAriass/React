{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\byjon\\\\Desktop\\\\React\\\\useReduce\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // In this case we are forwarding a lot of data through a lot of differents components\n  // creating a props chain that shouldn't be done (not neccesarily bad, but bad practice in bigger projects).\n  // One way of getting rid of this chain is to use the React Context API.\n  // On AuthContext.Provider we can pass pointers to functions too.\n  // In the case of Login and Home we are fordwarding the pointers because we use them directly on the component.\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","onLogout","logoutHandler","loginHandler"],"sources":["C:/Users/byjon/Desktop/React/useReduce/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  // In this case we are forwarding a lot of data through a lot of differents components\n  // creating a props chain that shouldn't be done (not neccesarily bad, but bad practice in bigger projects).\n  // One way of getting rid of this chain is to use the React Context API.\n  // On AuthContext.Provider we can pass pointers to functions too.\n  // In the case of Login and Home we are fordwarding the pointers because we use them directly on the component.\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler,\n      }}\n    >\n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EACA;EACA;EACA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLC,UAAU,EAAEA,UADP;MAELC,QAAQ,EAAEC;IAFL,CADT;IAAA,wBAME,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAA,WACG,CAACF,UAAD,iBAAe,QAAC,KAAD;QAAO,OAAO,EAAEG;MAAhB;QAAA;QAAA;QAAA;MAAA,QADlB,EAEGH,UAAU,iBAAI,QAAC,IAAD;QAAM,QAAQ,EAAEE;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;KApBQH,G;AAsBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}