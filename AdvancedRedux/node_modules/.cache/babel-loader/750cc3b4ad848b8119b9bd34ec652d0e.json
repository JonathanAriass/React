{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart: (state, action) => {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\n      }\n    },\n\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity -= 1;\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\n      }\n    }\n\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      message: \"Loading...\",\n      title: \"Sending cart data!\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-ea9c9-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", {\n        method: \"PUT\",\n        // PUT request override exisiting data\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        message: \"Successfully sent cart data!\",\n        title: \"Success cart data!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        message: \"Something went wrong!\",\n        title: \"Error!\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","removeFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","title","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["C:/Users/byjon/Desktop/React/AdvancedRedux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    replaceCart: (state, action) => {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          name: newItem.name,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity += 1;\r\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\r\n      }\r\n    },\r\n    removeFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity -= 1;\r\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        message: \"Loading...\",\r\n        title: \"Sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-http-ea9c9-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\r\n        {\r\n          method: \"PUT\", // PUT request override exisiting data\r\n          body: JSON.stringify(cart),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending cart data failed!\");\r\n      }\r\n    };\r\n    try {\r\n      await sendRequest();\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          message: \"Successfully sent cart data!\",\r\n          title: \"Success cart data!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          message: \"Something went wrong!\",\r\n          title: \"Error!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}